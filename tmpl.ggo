package "tmpl"
version "0.1 Copyright (C) 2018 Konrad Lother <k@hiddenbox.org>"

purpose "Generates mkstemp(3) file and writes output of PROGRAM to it."
usage "tmpl [-hV] [-fc] [-T FORMAT] [-e KEY=VALUE] [-p PROGRAM] [-r COMMAND] template..."
versiontext "This software is supplied WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. This is free software, and you are welcome to redistribute it under certain conditions; see the template COPYING for details."

text "\n"

option "force" f "Force output generation even if PROGRAM fails on a template. Use with caution!"
	flag off
	details="If PROGRAM fails on a template, no data (from that template)
will be added to the global buffer, instead of aborting. This might lead to unwanted
behaviour if you use tmpl for config file generation.
"

option "cat" c "Print buffer to STDOUT (does not write mkstemp(3) file)"
	flag off

option "mkstemp-template" T "Set mkstemp(3) template."
	string typestr="FORMAT"
	details="See mkstemp(3) man page"
	default="/tmp/.tmpl-XXXXXX"
	optional

option "environment" e "Set environment variable ENV to VALUE prior to running PROGRAM or COMMAND"
	string typestr="KEY=VALUE"
	multiple optional

option "delete" d "Spawns new process which deletes mkstemp(3) file after N seconds."
	float typestr="SECONDS"
	optional

option "program" p "Pass templateN to PROGRAM."
	string typestr="PROGRAM" default="/bin/sh" optional
	details="Example: tmpl -p /usr/local/bin/ruby ~/.mutt.tmpl.rb
"

option "run" r "Run COMMAND and delete template afterwards."
	string typestr="COMMAND" optional
	details="Instead of returning the path, tmpl runs COMMAND
and deletes the mkstemp(3) file after COMMAND returns.
It then exits with the return code of COMMAND.

Example: tmpl -r \"neomutt -F %f\" ~/.mutt.tmpl.sh

Variables:
	%f  - The generated mkstemp(3) file path
"

text "
See tmpl(1) for more informations and examples."
